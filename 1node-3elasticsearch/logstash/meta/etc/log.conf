input {
    syslog {
        port => 5514
        type => syslog
    }
    udp {
        port => 55514
        type => "udp"
        buffer_size => 8192
        codec => "json"
    }
}

filter {
    if [message] == "" {
        drop {}
    } else if [@message] {
        mutate {
            replace => [ "host", "%{[@fields][host]}" ]
            replace => [ "message", "%{@message}" ]
            add_field => { "program" => "%{[@fields][program]}" }
            remove_field => [ "@message", "@field" ]
        }   
        grok {
            match => [ "message", "%{WORD:program} %{BASE16FLOAT:ts_float}#%{INT}\[%{WORD:diamond_col}:%{INT:col_line}:%{WORD:SEVERITY}\]#%{INT}%{GREEDYDATA:message}" ]
            overwrite => [ "program", "message" ]
            add_tag => [ "diamond", "drop" ]
        }
        if "diamond" in [tags] {
            grok {
                match => [ "message", ".*took\s%{INT:statsd_val}\sms" ]
                add_tag => [ "statsd_timing"]
                add_field => { "statsd_key" => "%{program}.%{diamond_col}" }
            }
        }
    } else {
        grok {
            match => [ "message", "%{TIME:es_ts}\s+;;\s+%{WORD:es_inst}\s+%{WORD:es_status}" ]
            add_tag => [ "es_update" ]
        }
        if "es_update" in [tags] {
            mutate {
                replace => [ "message", "%{es_inst} %{es_status}" ]
                add_field => { "program" => "es_update" }
            }
        }
    
    }
    if "drop" in [tags] {
        drop {}
    }
}

output {
    if [type] == "syslog" or [type] == "udp" {
        if "statsd_timing" in [tags] {
            statsd {
                host => "statsd.service.consul"
                timing => { "%{statsd_key}" => "%{statsd_val}" }
            }
        } else {
            elasticsearch {
                host => "meta.elasticsearch.service.consul:9200"
                protocol => http
            }
            #stdout { codec => rubydebug }
        }
    }
}
